<?php
    error_reporting(E_ALL);
    ini_set('display_errors', '1');

    function callFunctionSecurely($functionName, $param1, $param2, $param3) {
        $blacklist = ['exec', 'system', 'passthru', 'shell_exec', 'assert', 'pcntl_exe', 'popen', 'proc_open', 'create_function', 'eval', 'pcntl_fork', 'unserialize'];

        if (in_array(strtolower($functionName), $blacklist)) {
            throw new Exception("Function $functionName is dangerous.");
        }
        if (!function_exists($functionName)) {
            throw new Exception("Function $functionName does not exist.");
        }

        if (!is_array($param1) || !is_array($param2) || !is_string($param3)) {
            throw new InvalidArgumentException("Invalid parameter types. Expected (array, array, string).");
        }

        return call_user_func_array($functionName, [$param1, $param2, $param3]);
    }

    function reflectUserInput(array $param1, array $param2, string $param3) {
        return [
            'param1' => $param1,
            'param2' => $param2,
            'param3' => $param3
        ];
    }

    if (isset($_GET['debug'])) {

        $func_name = isset($_GET['function_name']) ? $_GET['function_name'] : 'reflectUserInput';
        $param1 = $_GET['param1'];
        $param2 = $_GET['param2'];
        $param3 = $_GET['param3'];
    
        try {
            $result = callFunctionSecurely($func_name, $param1, $param2, $param3);
            print_r($result);
        } catch (Exception $e) {
            echo 'Error: ' . $e->getMessage();
        }
    }

    if (isset($_GET['source'])) {
        highlight_file(__FILE__);
    }

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PHP</title>
</head>
<body>
    <!-- use ?source=1 during development. -->
    <h1>Hi!</h1>
</body>
</html>
