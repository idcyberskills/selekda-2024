const sqlite3 = require('sqlite3').verbose();
const bcrypt = require('bcryptjs');

const database = new sqlite3.Database('./stash.db', (err) => {
  if (err) {
    console.error(err.message);
  } else {
    console.log('Connected to the SQLite database.');
  }
});

database.run(`
  CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    bio TEXT DEFAULT 'No bio yet.'  -- Add the bio field for biography note
  );
`);

const users = [
  { username: process.env.ADMIN_USERNAME, password: process.env.ADMIN_PASSWORD, bio: process.env.ADMIN_BIO },
];

for (let user of users) {
  bcrypt.hash(user.password, 10)
    .then((hashedPassword) => {
      const sql = 'INSERT INTO users (username, password, bio) VALUES (?, ?, ?)';

      database.run(sql, [user.username, hashedPassword, user.bio], (err) => {
        if (err) {
          return console.error('Error inserting user:', err.message);
        }
        console.log(`User ${user.username} inserted successfully.`);
      });
    })
    .catch((err) => {
      return console.error('Error in hashing password:', err.message);
    });
}

module.exports = database;
